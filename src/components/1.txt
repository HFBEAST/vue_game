<template>
  <el-container class="chart-content" direction="vertical" style="width: 100%; height: calc(100vh - 190px); overflow-y: auto;">

    <el-row :gutter="20" :class="{'two-column': isTwoColumn}">
      <el-col :span="isTwoColumn ? 12 : 24">
        <div ref="userPieChart" style="width: 100%; height: 600px;"></div>
      </el-col>
    </el-row>

    <el-row :gutter="20" :class="{'two-column': isTwoColumn}">
      <el-col :span="isTwoColumn ? 12 : 24">
        <div ref="monthlyChart" style="width: 100%; height: 600px;"></div>
      </el-col>
    </el-row>

    <el-row :gutter="20" :class="{'two-column': isTwoColumn}">
      <el-col :span="isTwoColumn ? 12 : 24">
        <div ref="questionChart" style="width: 100%; height: 600px;"></div>
      </el-col>
    </el-row>

  </el-container>
</template>

<script setup>
import { ref, onMounted, onBeforeUnmount } from 'vue';
import { CreateCharts, monthlyOptions, questionOptions, userPieOptions, parseUserData } from '@/utils/CreateCharts';
import { use } from 'echarts/core';
import { loadDataFromAWS } from '@/utils/ToAWS';
import { CanvasRenderer } from 'echarts/renderers';
import { BarChart, PieChart } from 'echarts/charts';
import { GridComponent, TooltipComponent, TitleComponent, LegendComponent } from 'echarts/components';

const isTwoColumn = ref(false);

const monthlyChart = ref(null);
const questionChart = ref(null);
const userPieChart = ref(null);

const handleResize = () => {
  isTwoColumn.value = window.innerWidth >= 1200; // 设置宽度阈值
};

const fetchData = async () => {
  const userUrl = 'https://o5ymi5rci6dobeyypagnu44zlq0fnnlf.lambda-url.ap-northeast-1.on.aws/';
  const userRequestData = { id: 'u' };

  loadDataFromAWS(userUrl, userRequestData, (error, data) => {
    if (error) {
      console.error("Error fetching user data:", error);
      return;
    }
    console.log("Fetched user data:", data); // 调试输出
    parseUserData(data);

    // 初始化图表
    CreateCharts(monthlyChart.value, monthlyOptions);
    CreateCharts(questionChart.value, questionOptions);
    CreateCharts(userPieChart.value, userPieOptions);
  });
};

onMounted(() => {
  window.addEventListener('resize', handleResize);
  handleResize(); // 初始检查窗口大小

  fetchData(); // 获取数据并初始化图表
});

onBeforeUnmount(() => {
  window.removeEventListener('resize', handleResize);
});

use([CanvasRenderer, BarChart, PieChart, GridComponent, TooltipComponent, TitleComponent, LegendComponent]);
</script>

<style scoped>
.chart-content {
  overflow-y: auto;
}

.two-column .el-col {
  width: 50%;
}
</style>
